#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="registration")]
	public partial class linqtoregdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertuser_course(user_course instance);
    partial void Updateuser_course(user_course instance);
    partial void Deleteuser_course(user_course instance);
    partial void Insertcourse_timeblock(course_timeblock instance);
    partial void Updatecourse_timeblock(course_timeblock instance);
    partial void Deletecourse_timeblock(course_timeblock instance);
    partial void Insertpong(pong instance);
    partial void Updatepong(pong instance);
    partial void Deletepong(pong instance);
    partial void Insertprereq(prereq instance);
    partial void Updateprereq(prereq instance);
    partial void Deleteprereq(prereq instance);
    partial void Insertcourse(course instance);
    partial void Updatecourse(course instance);
    partial void Deletecourse(course instance);
    #endregion
		
		public linqtoregdbDataContext() : 
				base(global::WindowsFormsApplication2.Properties.Settings.Default.registrationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqtoregdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtoregdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtoregdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqtoregdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<user_course> user_courses
		{
			get
			{
				return this.GetTable<user_course>();
			}
		}
		
		public System.Data.Linq.Table<course_timeblock> course_timeblocks
		{
			get
			{
				return this.GetTable<course_timeblock>();
			}
		}
		
		public System.Data.Linq.Table<pong> pongs
		{
			get
			{
				return this.GetTable<pong>();
			}
		}
		
		public System.Data.Linq.Table<prereq> prereqs
		{
			get
			{
				return this.GetTable<prereq>();
			}
		}
		
		public System.Data.Linq.Table<course> courses
		{
			get
			{
				return this.GetTable<course>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _username;
		
		private string _usertype;
		
		private string _password;
		
		private string _firstName;
		
		private string _lastName;
		
		private System.Nullable<int> _advisor;
		
		private EntityRef<user> _user2;
		
		private EntitySet<user_course> _user_courses;
		
		private EntitySet<course> _courses;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnusertypeChanging(string value);
    partial void OnusertypeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnadvisorChanging(System.Nullable<int> value);
    partial void OnadvisorChanged();
    #endregion
		
		public user()
		{
			this._user2 = default(EntityRef<user>);
			this._user_courses = new EntitySet<user_course>(new Action<user_course>(this.attach_user_courses), new Action<user_course>(this.detach_user_courses));
			this._courses = new EntitySet<course>(new Action<course>(this.attach_courses), new Action<course>(this.detach_courses));
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(50)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_advisor", DbType="Int")]
		public System.Nullable<int> advisor
		{
			get
			{
				return this._advisor;
			}
			set
			{
				if ((this._advisor != value))
				{
					this.OnadvisorChanging(value);
					this.SendPropertyChanging();
					this._advisor = value;
					this.SendPropertyChanged("advisor");
					this.OnadvisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user", Storage="_user2", ThisKey="userID", OtherKey="userID", IsUnique=true, IsForeignKey=false)]
		public user user2
		{
			get
			{
				return this._user2.Entity;
			}
			set
			{
				user previousValue = this._user2.Entity;
				if (((previousValue != value) 
							|| (this._user2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user2.Entity = null;
						previousValue.user1 = null;
					}
					this._user2.Entity = value;
					if ((value != null))
					{
						value.user1 = this;
					}
					this.SendPropertyChanged("user2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_course", Storage="_user_courses", ThisKey="username", OtherKey="username")]
		public EntitySet<user_course> user_courses
		{
			get
			{
				return this._user_courses;
			}
			set
			{
				this._user_courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_course", Storage="_courses", ThisKey="userID", OtherKey="instructor")]
		public EntitySet<course> courses
		{
			get
			{
				return this._courses;
			}
			set
			{
				this._courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user", Storage="_user1", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.user2 = null;
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.user2 = this;
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(int);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_courses(user_course entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_courses(user_course entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_courses(course entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_courses(course entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_courses")]
	public partial class user_course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_courseID;
		
		private string _username;
		
		private string _courseName;
		
		private System.Nullable<int> _courseID;
		
		private string _semester;
		
		private System.Nullable<decimal> _courseCredit;
		
		private string _grade;
		
		private EntityRef<user> _user;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_courseIDChanging(int value);
    partial void Onuser_courseIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OncourseNameChanging(string value);
    partial void OncourseNameChanged();
    partial void OncourseIDChanging(System.Nullable<int> value);
    partial void OncourseIDChanged();
    partial void OnsemesterChanging(string value);
    partial void OnsemesterChanged();
    partial void OncourseCreditChanging(System.Nullable<decimal> value);
    partial void OncourseCreditChanged();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    #endregion
		
		public user_course()
		{
			this._user = default(EntityRef<user>);
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_courseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_courseID
		{
			get
			{
				return this._user_courseID;
			}
			set
			{
				if ((this._user_courseID != value))
				{
					this.Onuser_courseIDChanging(value);
					this.SendPropertyChanging();
					this._user_courseID = value;
					this.SendPropertyChanged("user_courseID");
					this.Onuser_courseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string courseName
		{
			get
			{
				return this._courseName;
			}
			set
			{
				if ((this._courseName != value))
				{
					this.OncourseNameChanging(value);
					this.SendPropertyChanging();
					this._courseName = value;
					this.SendPropertyChanged("courseName");
					this.OncourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseID", DbType="Int")]
		public System.Nullable<int> courseID
		{
			get
			{
				return this._courseID;
			}
			set
			{
				if ((this._courseID != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseIDChanging(value);
					this.SendPropertyChanging();
					this._courseID = value;
					this.SendPropertyChanged("courseID");
					this.OncourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semester", DbType="NVarChar(5)")]
		public string semester
		{
			get
			{
				return this._semester;
			}
			set
			{
				if ((this._semester != value))
				{
					this.OnsemesterChanging(value);
					this.SendPropertyChanging();
					this._semester = value;
					this.SendPropertyChanged("semester");
					this.OnsemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseCredit", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> courseCredit
		{
			get
			{
				return this._courseCredit;
			}
			set
			{
				if ((this._courseCredit != value))
				{
					this.OncourseCreditChanging(value);
					this.SendPropertyChanging();
					this._courseCredit = value;
					this.SendPropertyChanged("courseCredit");
					this.OncourseCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="NVarChar(5)")]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_course", Storage="_user", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_courses.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_courses.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_user_course", Storage="_course", ThisKey="courseID", OtherKey="courseID", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.user_courses.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.user_courses.Add(this);
						this._courseID = value.courseID;
					}
					else
					{
						this._courseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.course_timeblocks")]
	public partial class course_timeblock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _course_timeblockID;
		
		private int _courseID;
		
		private int _timeblock;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_timeblockIDChanging(int value);
    partial void Oncourse_timeblockIDChanged();
    partial void OncourseIDChanging(int value);
    partial void OncourseIDChanged();
    partial void OntimeblockChanging(int value);
    partial void OntimeblockChanged();
    #endregion
		
		public course_timeblock()
		{
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_timeblockID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int course_timeblockID
		{
			get
			{
				return this._course_timeblockID;
			}
			set
			{
				if ((this._course_timeblockID != value))
				{
					this.Oncourse_timeblockIDChanging(value);
					this.SendPropertyChanging();
					this._course_timeblockID = value;
					this.SendPropertyChanged("course_timeblockID");
					this.Oncourse_timeblockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseID", DbType="Int NOT NULL")]
		public int courseID
		{
			get
			{
				return this._courseID;
			}
			set
			{
				if ((this._courseID != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseIDChanging(value);
					this.SendPropertyChanging();
					this._courseID = value;
					this.SendPropertyChanged("courseID");
					this.OncourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeblock", DbType="Int NOT NULL")]
		public int timeblock
		{
			get
			{
				return this._timeblock;
			}
			set
			{
				if ((this._timeblock != value))
				{
					this.OntimeblockChanging(value);
					this.SendPropertyChanging();
					this._timeblock = value;
					this.SendPropertyChanged("timeblock");
					this.OntimeblockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_course_timeblock", Storage="_course", ThisKey="courseID", OtherKey="courseID", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.course_timeblocks.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.course_timeblocks.Add(this);
						this._courseID = value.courseID;
					}
					else
					{
						this._courseID = default(int);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pong")]
	public partial class pong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private int _survival_highscore;
		
		private System.Nullable<int> _invaders_highscore;
		
		private System.Nullable<int> _snake_highscore;
		
		private System.Nullable<int> _pacman_highscore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onsurvival_highscoreChanging(int value);
    partial void Onsurvival_highscoreChanged();
    partial void Oninvaders_highscoreChanging(System.Nullable<int> value);
    partial void Oninvaders_highscoreChanged();
    partial void Onsnake_highscoreChanging(System.Nullable<int> value);
    partial void Onsnake_highscoreChanged();
    partial void Onpacman_highscoreChanging(System.Nullable<int> value);
    partial void Onpacman_highscoreChanged();
    #endregion
		
		public pong()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survival_highscore", DbType="Int NOT NULL")]
		public int survival_highscore
		{
			get
			{
				return this._survival_highscore;
			}
			set
			{
				if ((this._survival_highscore != value))
				{
					this.Onsurvival_highscoreChanging(value);
					this.SendPropertyChanging();
					this._survival_highscore = value;
					this.SendPropertyChanged("survival_highscore");
					this.Onsurvival_highscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invaders_highscore", DbType="Int")]
		public System.Nullable<int> invaders_highscore
		{
			get
			{
				return this._invaders_highscore;
			}
			set
			{
				if ((this._invaders_highscore != value))
				{
					this.Oninvaders_highscoreChanging(value);
					this.SendPropertyChanging();
					this._invaders_highscore = value;
					this.SendPropertyChanged("invaders_highscore");
					this.Oninvaders_highscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_snake_highscore", DbType="Int")]
		public System.Nullable<int> snake_highscore
		{
			get
			{
				return this._snake_highscore;
			}
			set
			{
				if ((this._snake_highscore != value))
				{
					this.Onsnake_highscoreChanging(value);
					this.SendPropertyChanging();
					this._snake_highscore = value;
					this.SendPropertyChanged("snake_highscore");
					this.Onsnake_highscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pacman_highscore", DbType="Int")]
		public System.Nullable<int> pacman_highscore
		{
			get
			{
				return this._pacman_highscore;
			}
			set
			{
				if ((this._pacman_highscore != value))
				{
					this.Onpacman_highscoreChanging(value);
					this.SendPropertyChanging();
					this._pacman_highscore = value;
					this.SendPropertyChanged("pacman_highscore");
					this.Onpacman_highscoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prereqs")]
	public partial class prereq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _course_prereqID;
		
		private string _courseName;
		
		private string _prereqName;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_prereqIDChanging(int value);
    partial void Oncourse_prereqIDChanged();
    partial void OncourseNameChanging(string value);
    partial void OncourseNameChanged();
    partial void OnprereqNameChanging(string value);
    partial void OnprereqNameChanged();
    #endregion
		
		public prereq()
		{
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_prereqID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int course_prereqID
		{
			get
			{
				return this._course_prereqID;
			}
			set
			{
				if ((this._course_prereqID != value))
				{
					this.Oncourse_prereqIDChanging(value);
					this.SendPropertyChanging();
					this._course_prereqID = value;
					this.SendPropertyChanged("course_prereqID");
					this.Oncourse_prereqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string courseName
		{
			get
			{
				return this._courseName;
			}
			set
			{
				if ((this._courseName != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncourseNameChanging(value);
					this.SendPropertyChanging();
					this._courseName = value;
					this.SendPropertyChanged("courseName");
					this.OncourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prereqName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string prereqName
		{
			get
			{
				return this._prereqName;
			}
			set
			{
				if ((this._prereqName != value))
				{
					this.OnprereqNameChanging(value);
					this.SendPropertyChanging();
					this._prereqName = value;
					this.SendPropertyChanged("prereqName");
					this.OnprereqNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_prereq", Storage="_course", ThisKey="courseName", OtherKey="courseName", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.prereqs.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.prereqs.Add(this);
						this._courseName = value.courseName;
					}
					else
					{
						this._courseName = default(string);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.courses")]
	public partial class course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _courseID;
		
		private string _courseName;
		
		private string _courseTitle;
		
		private int _instructor;
		
		private decimal _courseCredit;
		
		private int _numSeats;
		
		private string _department;
		
		private System.Nullable<int> _section;
		
		private string _semester;
		
		private EntitySet<user_course> _user_courses;
		
		private EntitySet<course_timeblock> _course_timeblocks;
		
		private EntitySet<prereq> _prereqs;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncourseIDChanging(int value);
    partial void OncourseIDChanged();
    partial void OncourseNameChanging(string value);
    partial void OncourseNameChanged();
    partial void OncourseTitleChanging(string value);
    partial void OncourseTitleChanged();
    partial void OninstructorChanging(int value);
    partial void OninstructorChanged();
    partial void OncourseCreditChanging(decimal value);
    partial void OncourseCreditChanged();
    partial void OnnumSeatsChanging(int value);
    partial void OnnumSeatsChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OnsectionChanging(System.Nullable<int> value);
    partial void OnsectionChanged();
    partial void OnsemesterChanging(string value);
    partial void OnsemesterChanged();
    #endregion
		
		public course()
		{
			this._user_courses = new EntitySet<user_course>(new Action<user_course>(this.attach_user_courses), new Action<user_course>(this.detach_user_courses));
			this._course_timeblocks = new EntitySet<course_timeblock>(new Action<course_timeblock>(this.attach_course_timeblocks), new Action<course_timeblock>(this.detach_course_timeblocks));
			this._prereqs = new EntitySet<prereq>(new Action<prereq>(this.attach_prereqs), new Action<prereq>(this.detach_prereqs));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int courseID
		{
			get
			{
				return this._courseID;
			}
			set
			{
				if ((this._courseID != value))
				{
					this.OncourseIDChanging(value);
					this.SendPropertyChanging();
					this._courseID = value;
					this.SendPropertyChanged("courseID");
					this.OncourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string courseName
		{
			get
			{
				return this._courseName;
			}
			set
			{
				if ((this._courseName != value))
				{
					this.OncourseNameChanging(value);
					this.SendPropertyChanging();
					this._courseName = value;
					this.SendPropertyChanged("courseName");
					this.OncourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string courseTitle
		{
			get
			{
				return this._courseTitle;
			}
			set
			{
				if ((this._courseTitle != value))
				{
					this.OncourseTitleChanging(value);
					this.SendPropertyChanging();
					this._courseTitle = value;
					this.SendPropertyChanged("courseTitle");
					this.OncourseTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instructor", DbType="Int NOT NULL")]
		public int instructor
		{
			get
			{
				return this._instructor;
			}
			set
			{
				if ((this._instructor != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninstructorChanging(value);
					this.SendPropertyChanging();
					this._instructor = value;
					this.SendPropertyChanged("instructor");
					this.OninstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseCredit", DbType="Decimal(8,4) NOT NULL")]
		public decimal courseCredit
		{
			get
			{
				return this._courseCredit;
			}
			set
			{
				if ((this._courseCredit != value))
				{
					this.OncourseCreditChanging(value);
					this.SendPropertyChanging();
					this._courseCredit = value;
					this.SendPropertyChanged("courseCredit");
					this.OncourseCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numSeats", DbType="Int NOT NULL")]
		public int numSeats
		{
			get
			{
				return this._numSeats;
			}
			set
			{
				if ((this._numSeats != value))
				{
					this.OnnumSeatsChanging(value);
					this.SendPropertyChanging();
					this._numSeats = value;
					this.SendPropertyChanged("numSeats");
					this.OnnumSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="NVarChar(50)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section", DbType="Int")]
		public System.Nullable<int> section
		{
			get
			{
				return this._section;
			}
			set
			{
				if ((this._section != value))
				{
					this.OnsectionChanging(value);
					this.SendPropertyChanging();
					this._section = value;
					this.SendPropertyChanged("section");
					this.OnsectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semester", DbType="NVarChar(50)")]
		public string semester
		{
			get
			{
				return this._semester;
			}
			set
			{
				if ((this._semester != value))
				{
					this.OnsemesterChanging(value);
					this.SendPropertyChanging();
					this._semester = value;
					this.SendPropertyChanged("semester");
					this.OnsemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_user_course", Storage="_user_courses", ThisKey="courseID", OtherKey="courseID")]
		public EntitySet<user_course> user_courses
		{
			get
			{
				return this._user_courses;
			}
			set
			{
				this._user_courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_course_timeblock", Storage="_course_timeblocks", ThisKey="courseID", OtherKey="courseID")]
		public EntitySet<course_timeblock> course_timeblocks
		{
			get
			{
				return this._course_timeblocks;
			}
			set
			{
				this._course_timeblocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_prereq", Storage="_prereqs", ThisKey="courseName", OtherKey="courseName")]
		public EntitySet<prereq> prereqs
		{
			get
			{
				return this._prereqs;
			}
			set
			{
				this._prereqs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_course", Storage="_user", ThisKey="instructor", OtherKey="userID", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.courses.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.courses.Add(this);
						this._instructor = value.userID;
					}
					else
					{
						this._instructor = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_courses(user_course entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_user_courses(user_course entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
		
		private void attach_course_timeblocks(course_timeblock entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_course_timeblocks(course_timeblock entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
		
		private void attach_prereqs(prereq entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_prereqs(prereq entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
	}
}
#pragma warning restore 1591
